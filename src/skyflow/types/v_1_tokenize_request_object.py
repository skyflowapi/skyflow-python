# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .flow_enum_data_type import FlowEnumDataType


class V1TokenizeRequestObject(UniversalBaseModel):
    value: typing.Optional[typing.Optional[typing.Any]] = None
    data_type: typing_extensions.Annotated[typing.Optional[FlowEnumDataType], FieldMetadata(alias="dataType")] = None
    token_group_names: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="tokenGroupNames")
    ] = pydantic.Field(default=None)
    """
    List of token group names
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
