from enum import Enum

from ._version import SDK_VERSION

error_prefix = f"Skyflow Python SDK {SDK_VERSION}"

class SkyflowMessages:
    class ErrorCodes(Enum):
        INVALID_INPUT = 400
        INVALID_INDEX = 404
        SERVER_ERROR = 500
        PARTIAL_SUCCESS = 500
        TOKENS_GET_COLUMN_NOT_SUPPORTED = 400
        REDACTION_WITH_TOKENS_NOT_SUPPORTED = 400

    class Error(Enum):
        EMPTY_VAULT_ID = f"{error_prefix} Initialization failed. Invalid vault Id. Specify a valid vault Id."
        INVALID_VAULT_ID = f"{error_prefix} Initialization failed. Invalid vault Id. Specify a valid vault Id as a string."
        EMPTY_CLUSTER_ID = f"{error_prefix} Initialization failed. Invalid cluster Id for vault with id {{}}. Specify a valid cluster Id."
        INVALID_CLUSTER_ID = f"{error_prefix} Initialization failed. Invalid cluster Id for vault with id {{}}. Specify cluster Id as a string."
        INVALID_ENV = f"{error_prefix} Initialization failed. Invalid env for vault with id {{}}. Specify a valid env."
        INVALID_KEY = f"{error_prefix} Initialization failed. Invalid {{}}. Specify a valid key"
        VAULT_ID_NOT_IN_CONFIG_LIST = f"{error_prefix} Validation error. Vault id {{}} is missing from the config. Specify the vault id from configs."
        EMPTY_VAULT_CONFIGS = f"{error_prefix} Validation error. Specify at least one vault config."
        EMPTY_CONNECTION_CONFIGS = f"{error_prefix} Validation error. Specify at least one connection config."
        VAULT_ID_ALREADY_EXISTS =f"{error_prefix} Initialization failed. vault with id {{}} already exists."
        CONNECTION_ID_ALREADY_EXISTS = f"{error_prefix} Initialization failed. Connection with id {{}} already exists."

        EMPTY_CREDENTIALS = f"{error_prefix} Validation error. Invalid credentials for {{}} with id {{}}. Credentials must not be empty."
        INVALID_CREDENTIALS_IN_CONFIG = f"{error_prefix} Validation error. Invalid credentials for {{}} with id {{}}. Specify a valid credentials."
        INVALID_CREDENTIALS = f"{error_prefix} Validation error. Invalid credentials. Specify a valid credentials."
        MULTIPLE_CREDENTIALS_PASSED_IN_CONFIG = f"{error_prefix} Validation error. Multiple credentials provided for {{}} with id {{}}. Please specify only one valid credential."
        MULTIPLE_CREDENTIALS_PASSED = f"{error_prefix} Validation error. Multiple credentials provided. Please specify only one valid credential."
        EMPTY_CREDENTIALS_STRING_IN_CONFIG = f"{error_prefix} Validation error. Invalid credentials for {{}} with id {{}}. Specify valid credentials."
        EMPTY_CREDENTIALS_STRING = f"{error_prefix} Validation error. Invalid credentials. Specify valid credentials."
        INVALID_CREDENTIALS_STRING_IN_CONFIG = f"{error_prefix} Validation error. Invalid credentials for {{}} with id {{}}. Specify credentials as a string."
        INVALID_CREDENTIALS_STRING = f"{error_prefix} Validation error. Invalid credentials. Specify credentials as a string."
        EMPTY_CREDENTIAL_FILE_PATH_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid credentials for {{}} with id {{}}. Specify a valid file path."
        EMPTY_CREDENTIAL_FILE_PATH = f"{error_prefix} Initialization failed. Invalid credentials. Specify a valid file path."
        INVALID_CREDENTIAL_FILE_PATH_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid credentials for {{}} with id {{}}. Expected file path to be a string."
        INVALID_CREDENTIAL_FILE_PATH = f"{error_prefix} Initialization failed. Invalid credentials. Expected file path to be a string."
        EMPTY_CREDENTIALS_TOKEN_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid token for {{}} with id {{}}.Specify a valid credentials token."
        EMPTY_CREDENTIALS_TOKEN = f"{error_prefix} Initialization failed. Invalid token.Specify a valid credentials token."
        INVALID_CREDENTIALS_TOKEN_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid credentials token for {{}} with id {{}}. Expected token to be a string."
        INVALID_CREDENTIALS_TOKEN = f"{error_prefix} Initialization failed. Invalid credentials token. Expected token to be a string."
        EXPIRED_TOKEN = f"${error_prefix} Initialization failed. Given token is expired. Specify a valid credentials token."
        EMPTY_API_KEY_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid api key for {{}} with id {{}}.Specify a valid api key."
        EMPTY_API_KEY= f"{error_prefix} Initialization failed. Invalid api key.Specify a valid api key."
        INVALID_API_KEY_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid api key for {{}} with id {{}}. Expected api key to be a string."
        INVALID_API_KEY = f"{error_prefix} Initialization failed. Invalid api key. Expected api key to be a string."
        INVALID_ROLES_KEY_TYPE_IN_CONFIG = f"{error_prefix} Validation error. Invalid roles for {{}} with id {{}}. Specify roles as an array."
        INVALID_ROLES_KEY_TYPE = f"{error_prefix} Validation error. Invalid roles. Specify roles as an array."
        EMPTY_ROLES_IN_CONFIG = f"{error_prefix} Validation error. Invalid roles for {{}} with id {{}}. Specify at least one role."
        EMPTY_ROLES = f"{error_prefix} Validation error. Invalid roles. Specify at least one role."
        EMPTY_CONTEXT_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid context provided for {{}} with id {{}}. Specify context as type Context."
        EMPTY_CONTEXT = f"{error_prefix} Initialization failed. Invalid context provided. Specify context as type Context."
        INVALID_CONTEXT_IN_CONFIG = f"{error_prefix} Initialization failed. Invalid context for {{}} with id {{}}. Specify a valid context."
        INVALID_CONTEXT = f"{error_prefix} Initialization failed. Invalid context. Specify a valid context."
        INVALID_LOG_LEVEL = f"{error_prefix} Initialization failed. Invalid log level. Specify a valid log level."
        EMPTY_LOG_LEVEL = f"{error_prefix} Initialization failed. Specify a valid log level."

        EMPTY_CONNECTION_ID = f"{error_prefix} Initialization failed. Invalid connection Id. Specify a valid connection Id."
        INVALID_CONNECTION_ID = f"{error_prefix} Initialization failed. Invalid connection Id. Specify connection Id as a string."
        EMPTY_CONNECTION_URL = f"{error_prefix} Initialization failed. Invalid connection Url for connection with id {{}}. Specify a valid connection Url."
        INVALID_CONNECTION_URL = f"{error_prefix} Initialization failed. Invalid connection Url for connection with id {{}}. Specify connection Url as a string."
        CONNECTION_ID_NOT_IN_CONFIG_LIST = f"{error_prefix} Validation error. {{}} is missing from the config. Specify the connectionIds from config."
        RESPONSE_NOT_JSON = f"{error_prefix} Response {{}} is not valid JSON."
        API_ERROR = f"{error_prefix} Server returned status code {{}}"

        MISSING_TABLE_NAME_IN_INSERT = f"{error_prefix} Validation error. Table name cannot be empty in insert request. Specify a table name."
        INVALID_TABLE_NAME_IN_INSERT = f"{error_prefix} Validation error. Invalid table name in insert request. Specify a valid table name."
        INVALID_TYPE_OF_DATA_IN_INSERT = f"{error_prefix} Validation error. Invalid type of data in insert request. Specify data as a object array."
        EMPTY_DATA_IN_INSERT = f"{error_prefix} Validation error. Data array cannot be empty. Specify data in insert request."
        INVALID_UPSERT_OPTIONS_TYPE = f"{error_prefix} Validation error. 'upsert' key cannot be empty in options. At least one object of table and column is required."
        INVALID_HOMOGENEOUS_TYPE = f"{error_prefix} Validation error. Invalid type of homogeneous. Specify homogeneous as a string."
        INVALID_TOKEN_STRICT_TYPE = f"{error_prefix} Validation error. Invalid type of token strict. Specify token strict as a enum."
        INVALID_RETURN_TOKENS_TYPE = f"{error_prefix} Validation error. Invalid type  of return tokens. Specify return tokens as a boolean."
        INVALID_CONTINUE_ON_ERROR_TYPE = f"{error_prefix} Validation error. Invalid type of continue on error. Specify continue on error as a boolean."
        TOKENS_PASSED_FOR_TOKEN_STRICT_DISABLE = f"{error_prefix} Validation error. 'token_strict' wasn't specified. Set 'token_strict' to 'ENABLE' to insert tokens."
        INSUFFICIENT_TOKENS_PASSED_FOR_TOKEN_STRICT_ENABLE_STRICT = f"{error_prefix} Validation error. 'byot' is set to 'ENABLE_STRICT', but some fields are missing tokens. Specify tokens for all fields."
        NO_TOKENS_IN_INSERT = f"{error_prefix} Validation error. Tokens weren't specified for records while 'token_strict' was {{}}. Specify tokens."
        BATCH_INSERT_FAILURE = f"{error_prefix} Insert operation failed."
        GET_FAILURE = f"{error_prefix} Get operation failed."
        HOMOGENOUS_NOT_SUPPORTED_WITH_UPSERT = f"{error_prefix} Validation error. Homogenous is not supported when upsert is passed."

        EMPTY_TABLE_VALUE = f"{error_prefix} Validation error. 'table' can't be empty. Specify a table."
        INVALID_TABLE_VALUE = f"{error_prefix} Validation error. Invalid type of table. Specify table as a string"
        EMPTY_RECORD_IDS_IN_DELETE = f"{error_prefix} Validation error. 'record ids' array can't be empty. Specify one or more record ids."
        BULK_DELETE_FAILURE = f"{error_prefix} Delete operation failed."

        INVALID_QUERY_TYPE = f"{error_prefix} Validation error. Query parameter is of type {{}}. Specify as a string."
        EMPTY_QUERY = f"{error_prefix} Validation error. Query parameter can't be empty. Specify as a string."
        INVALID_QUERY_COMMAND = f"{error_prefix} Validation error. {{}} command was passed instead, but only SELECT commands are supported. Specify the SELECT command."
        SERVER_ERROR = f"{error_prefix} Validation error. Check SkyflowError.data for details."
        QUERY_FAILED = f"{error_prefix} Query operation failed."
        DETOKENIZE_FIELD = f"{error_prefix} Detokenize operation failed."
        UPDATE_FAILED = f"{error_prefix} Update operation failed."
        TOKENIZE_FAILED = f"{error_prefix} Tokenize operation failed."
        INVOKE_CONNECTION_FAILED = f"{error_prefix} Invoke Connection operation failed."

        INVALID_IDS_TYPE = f"{error_prefix} Validation error. 'ids' has a value of type {{}}. Specify 'ids' as list."
        INVALID_REDACTION_TYPE = f"{error_prefix} Validation error. 'redaction' has a value of type {{}}. Specify 'redaction' as type Skyflow.Redaction."
        INVALID_COLUMN_NAME = f"{error_prefix} Validation error. 'column' has a value of type {{}}. Specify 'column' as a string."
        INVALID_COLUMN_VALUE = f"{error_prefix} Validation error. columnValues key has a value of type {{}}. Specify columnValues key as list."
        INVALID_FIELDS_VALUE = f"{error_prefix} Validation error. fields key has a value of type{{}}. Specify fields key as list."
        BOTH_OFFSET_AND_LIMIT_SPECIFIED = f"${error_prefix} Validation error. Both offset and limit cannot be present at the same time"
        INVALID_OFF_SET_VALUE = f"{error_prefix} Validation error. offset key has a value of type {{}}. Specify offset key as integer."
        INVALID_LIMIT_VALUE = f"{error_prefix} Validation error. limit key has a value of type {{}}. Specify limit key as integer."
        INVALID_DOWNLOAD_URL_VALUE = f"{error_prefix} Validation error. download_url key has a value of type {{}}. Specify download_url key as boolean."
        REDACTION_WITH_TOKENS_NOT_SUPPORTED = f"{error_prefix} Validation error. 'redaction' can't be used when tokens are specified. Remove 'redaction' from payload if tokens are specified."
        TOKENS_GET_COLUMN_NOT_SUPPORTED = f"{error_prefix} Validation error. Column name and/or column values can't be used when tokens are specified. Remove unique column values or tokens from the payload."
        BOTH_IDS_AND_COLUMN_DETAILS_SPECIFIED = f"{error_prefix} Validation error. Both Skyflow IDs and column details can't be specified. Either specify Skyflow IDs or unique column details."
        INVALID_ORDER_BY_VALUE = f"{error_prefix} Validation error. order_by key has a value of type {{}}. Specify order_by key as Skyflow.OrderBy"

        UPDATE_FIELD_KEY_ERROR = f"{error_prefix} Validation error. Fields are empty in an update payload. Specify at least one field."
        INVALID_FIELDS_TYPE = f"{error_prefix} Validation error. The 'data' key has a value of type {{}}. Specify 'data' as a dictionary."
        IDS_KEY_ERROR = f"{error_prefix} Validation error. 'ids' key is missing from the payload. Specify an 'ids' key."
        INVALID_TOKENS_LIST_VALUE = f"{error_prefix} Validation error. The 'tokens' key has a value of type {{}}. Specify 'tokens' as a list."
        EMPTY_TOKENS_LIST_VALUE = f"{error_prefix} Validation error. Tokens are empty in detokenize payload. Specify at lease one token"

        INVALID_TOKENIZE_PARAMETERS = f"{error_prefix} Validation error. The 'tokenize_parameters' key has a value of type {{}}. Specify 'tokenize_parameters' as a list."
        EMPTY_TOKENIZE_PARAMETERS = f"{error_prefix} Validation error. Tokenize parameters are empty in tokenize payload. Specify at least one parameter."
        INVALID_TOKENIZE_PARAMETER = f"{error_prefix} Validation error. Tokenize parameter at index {{}} has a value of type {{}}. Specify as a dictionary."
        EMPTY_TOKENIZE_PARAMETER_VALUE = f"{error_prefix} Validation error. Tokenize parameter value at index {{}} is empty. Specify a valid value."
        EMPTY_TOKENIZE_PARAMETER_COLUMN_GROUP = f"{error_prefix} Validation error. Tokenize parameter column group at index {{}} is empty. Specify a valid column group."
        INVALID_TOKENIZE_PARAMETER_KEY = f"{error_prefix} Validation error. Tokenize parameter key at index {{}} is invalid. Specify a valid key value."

        INVALID_REQUEST_BODY = f"{error_prefix} Validation error. Invalid request body. Specify the request body as an object."
        INVALID_REQUEST_HEADERS = f"{error_prefix} Validation error. Invalid request headers. Specify the request as an object."
        INVALID_URL = f"{error_prefix} Validation error. Connection url {{}} is invalid. Specify a valid connection url."
        INVALID_PATH_PARAMS = f"{error_prefix} Validation error. Path parameters aren't valid. Specify valid path parameters."
        INVALID_QUERY_PARAMS = f"{error_prefix} Validation error. Query parameters aren't valid. Specify valid query parameters."

        MISSING_PRIVATE_KEY = f"{error_prefix} Initialization failed. Unable to read private key in credentials. Verify your private key."
        MISSING_CLIENT_ID = f"{error_prefix} Initialization failed. Unable to read client ID in credentials. Verify your client ID."
        MISSING_KEY_ID = f"{error_prefix} Initialization failed. Unable to read key ID in credentials. Verify your key ID."
        MISSING_TOKEN_URI = f"{error_prefix} Initialization failed. Unable to read token URI in credentials. Verify your token URI."
        JWT_INVALID_FORMAT = f"{error_prefix} Initialization failed. Invalid private key format. Verify your credentials."
        JWT_DECODE_ERROR = f"{error_prefix} Validation error. Invalid access token. Verify your credentials."
        FILE_INVALID_JSON = f"{error_prefix} Initialization failed. File at {{}} is not in valid JSON format. Verify the file contents."
        INVALID_JSON_FORMAT_IN_CREDENTIALS_ENV = f"{error_prefix} Validation error. Invalid JSON format in SKYFLOW_CREDENTIALS environment variable."

    class Info(Enum):
        CLIENT_INITIALIZED = "INFO: [Skyflow] Initialized skyflow client."
        VALIDATING_VAULT_CONFIG = "INFO: [Skyflow] Validating vault config."
        VALIDATING_CONNECTION_CONFIG = "INFO: [Skyflow] Validating connection config."
        UNABLE_TO_GENERATE_SDK_METRIC = f"INFO: [Skyflow] Unable to generate {{}} metric."
        VAULT_CONTROLLER_INITIALIZED = f"INFO: [Skyflow] Initialized vault controller with vault ID {{}}."
        CONNECTION_CONTROLLER_INITIALIZED = f"INFO: [Skyflow] Initialized connection controller with connection ID {{}}."
        VAULT_CONFIG_EXISTS = f"INFO: [Skyflow] Vault config with vault ID {{}} already exists."
        VAULT_CONFIG_DOES_NOT_EXIST = f"INFO: [Skyflow] Vault config with vault ID {{}} doesn't exist."
        CONNECTION_CONFIG_EXISTS = f"INFO: [Skyflow] Connection config with connection ID {{}} already exists."
        CONNECTION_CONFIG_DOES_NOT_EXIST = f"INFO: [Skyflow] Connection config with connection ID {{}} doesn't exist."
        LOGGER_SETUP_DONE = f"INFO: [Skyflow] Set up logger."
        CURRENT_LOG_LEVEL = f"INFO: [Skyflow] Current log level is {{}}."

        BEARER_TOKEN_EXPIRED = "INFO: [Skyflow] Bearer token is expired."
        GET_BEARER_TOKEN_TRIGGERED = "INFO: [Skyflow] generate_bearer_token method triggered."
        GET_BEARER_TOKEN_SUCCESS = "INFO: [Skyflow] Bearer token generated."
        GET_SIGNED_DATA_TOKENS_TRIGGERED = "INFO: [Skyflow] generate_signed_data_tokens method triggered."
        GET_SIGNED_DATA_TOKEN_SUCCESS = "INFO: [Skyflow] Signed data tokens generated."
        GENERATE_BEARER_TOKEN_FROM_CREDENTIALS_STRING_TRIGGERED = "INFO: [Skyflow] generate bearer_token_from_credential_string method triggered ."
        REUSE_BEARER_TOKEN = "INFO: [Skyflow] Reusing bearer token."


        VALIDATE_INSERT_REQUEST = "INFO: [Skyflow] Validating insert request."
        INSERT_TRIGGERED = "INFO: [Skyflow] Insert method triggered."
        INSERT_SUCCESS = "INFO: [Skyflow] Data inserted."
        INSERT_REQUEST_RESOLVED = "INFO: [Skyflow] Insert request resolved."

        VALIDATE_UPDATE_REQUEST = "INFO: [Skyflow] Validating update request."
        UPDATE_REQUEST_RESOLVED = "INFO: [Skyflow] Update request resolved."
        UPDATE_SUCCESS = "INFO: [Skyflow] Data updated."
        UPDATE_TRIGGERED = "INFO: [Skyflow] Update method triggered."

        DELETE_TRIGGERED = "INFO: [Skyflow] Delete method triggered."
        VALIDATING_DELETE_REQUEST = "INFO: [Skyflow] Validating delete request."
        DELETE_REQUEST_RESOLVED = "INFO: [Skyflow] Delete request resolved."
        DELETE_SUCCESS = "INFO: [Skyflow] Data deleted."

        GET_TRIGGERED = "INFO: [Skyflow] Get method triggered."
        VALIDATE_GET_REQUEST = "INFO: [Skyflow] Validating get request."
        GET_REQUEST_RESOLVED = "INFO: [Skyflow] Get request resolved."
        GET_SUCCESS = "INFO: [Skyflow] Data revealed."

        QUERY_TRIGGERED = "INFO: [Skyflow] Query method triggered."
        VALIDATING_QUERY_REQUEST = "INFO: [Skyflow] Validating query request."
        QUERY_REQUEST_RESOLVED = "INFO: [Skyflow] Query request resolved."
        QUERY_SUCCESS = "INFO: [Skyflow] Query executed."

        DETOKENIZE_TRIGGERED = "INFO: [Skyflow] Detokenize method triggered."
        VALIDATE_DETOKENIZE_REQUEST = "INFO: [Skyflow] Validating detokenize request."
        DETOKENIZE_REQUEST_RESOLVED = "INFO: [Skyflow] Detokenize request resolved."
        DETOKENIZE_SUCCESS = "INFO: [Skyflow] Data detokenized."

        TOKENIZE_TRIGGERED = "INFO: [Skyflow] Tokenize method triggered."
        VALIDATING_TOKENIZE_REQUEST = "INFO: [Skyflow] Validating tokenize request."
        TOKENIZE_REQUEST_RESOLVED = "INFO: [Skyflow] Tokenize request resolved."
        TOKENIZE_SUCCESS = "INFO: [Skyflow] Data tokenized."

        INVOKE_CONNECTION_TRIGGERED = "INFO: [Skyflow] Invoke connection method triggered."
        VALIDATING_INVOKE_CONNECTION_REQUEST = "INFO: [Skyflow] Validating invoke connection request."
        INVOKE_CONNECTION_REQUEST_RESOLVED = "INFO: [Skyflow] Invoke connection request resolved."
        INVOKE_CONNECTION_SUCCESS = "info: [Skyflow] Invoke Connection Success."


        VALIDATE_DETOKENIZE_INPUT = "Validating detokenize input"
        VALIDATE_GET_RECORDS = "Validating get records"
        VALIDATE_CONNECTION_CONFIG = "Validating connection config"
        BEARER_TOKEN_RECEIVED = "tokenProvider returned token successfully."
        GENERATE_BEARER_TOKEN_TRIGGERED = "Generate bearer token triggered"
        GENERATE_BEARER_TOKEN_SUCCESS = "Generate bearer token returned successfully"
        IS_TOKEN_VALID_TRIGGERED = "isTokenValid() triggered"
        IS_EXPIRED_TRIGGERED = "is_expired() triggered"
        EMPTY_ACCESS_TOKEN = "Give access token is empty"
        INVALID_TOKEN = "Given token is invalid"
        UPDATE_DATA_SUCCESS = "Data has been updated successfully"

    class ErrorLogs(Enum):
        VAULTID_IS_REQUIRED = "ERROR: [Skyflow] Invalid vault config. Vault ID is required."
        EMPTY_VAULTID = "ERROR: [Skyflow] Invalid vault config. Vault ID can not be empty."
        CLUSTER_ID_IS_REQUIRED = "ERROR: [Skyflow] Invalid vault config. Cluster ID is required."
        EMPTY_CLUSTER_ID = "ERROR: [Skyflow] Invalid vault config. Cluster ID can not be empty."
        ENV_IS_REQUIRED = "ERROR: [Skyflow] Invalid vault config. Env is required."
        CONNECTION_ID_IS_REQUIRED = "ERROR: [Skyflow] Invalid connection config. Connection ID is required."
        EMPTY_CONNECTION_ID = "ERROR: [Skyflow] Invalid connection config. Connection ID can not be empty."
        CONNECTION_URL_IS_REQUIRED = "ERROR: [Skyflow] Invalid connection config. Connection URL is required."
        EMPTY_CONNECTION_URL = "ERROR: [Skyflow] Invalid connection config. Connection URL  can not be empty."
        INVALID_CONNECTION_URL = "ERROR: [Skyflow] Invalid connection config. Connection URL is not a valid URL."
        EMPTY_CREDENTIALS_PATH = "ERROR: [Skyflow] Invalid credentials. Credentials path can not be empty."
        EMPTY_CREDENTIALS_STRING = "ERROR: [Skyflow] Invalid credentials. Credentials string can not be empty."
        EMPTY_TOKEN_VALUE = "ERROR: [Skyflow] Invalid credentials. Token can not be empty."
        EMPTY_API_KEY_VALUE = "ERROR: [Skyflow] Invalid credentials. Api key can not be empty."
        INVALID_API_KEY = "ERROR: [Skyflow] Invalid credentials. Api key is invalid."

        INVALID_BEARER_TOKEN = "ERROR: [Skyflow] Bearer token is invalid or expired."
        INVALID_CREDENTIALS_FILE = "ERROR: [Skyflow] Credentials file is either null or an invalid file."
        INVALID_CREDENTIALS_STRING_FORMAT = "ERROR: [Skyflow] Credentials string in not in a valid JSON string format."
        PRIVATE_KEY_IS_REQUIRED = "ERROR: [Skyflow] Private key is required."
        CLIENT_ID_IS_REQUIRED = "ERROR: [Skyflow] Client ID is required."
        KEY_ID_IS_REQUIRED = "ERROR: [Skyflow] Key ID is required."
        TOKEN_URI_IS_REQUIRED = "ERROR: [Skyflow] Token URI is required."
        INVALID_TOKEN_URI = "ERROR: [Skyflow] Invalid value for token URI in credentials."


        TABLE_IS_REQUIRED = f"ERROR: [Skyflow] Invalid {{}} request. Table is required."
        EMPTY_TABLE_NAME = f"ERROR: [Skyflow] Invalid {{}} request. Table name can not be empty."
        VALUES_IS_REQUIRED = f"ERROR: [Skyflow] Invalid {{}} request. Values are required."
        EMPTY_VALUES = f"ERROR: [Skyflow] Invalid {{}} request. Values can not be empty."
        EMPTY_OR_NULL_VALUE_IN_VALUES = f"ERROR: [Skyflow] Invalid {{}} request. Value can not be null or empty in values for key {{}}."
        EMPTY_OR_NULL_KEY_IN_VALUES = f"ERROR: [Skyflow] Invalid {{}} request. Key can not be null or empty in values."
        EMPTY_UPSERT = f"ERROR: [Skyflow] Invalid {{}} request. Upsert can not be empty."
        HOMOGENOUS_NOT_SUPPORTED_WITH_UPSERT = f"ERROR: [Skyflow] Invalid {{}} request. Homogenous is not supported when upsert is passed."
        EMPTY_TOKENS = f"ERROR: [Skyflow] Invalid {{}} request. Tokens can not be empty."
        EMPTY_OR_NULL_VALUE_IN_TOKENS = f"ERROR: [Skyflow] Invalid {{}} request. Value can not be null or empty in tokens for key {{}}."
        EMPTY_OR_NULL_KEY_IN_TOKENS = f"ERROR: [Skyflow] Invalid {{}} request. Key can not be null or empty in tokens."
        MISMATCH_OF_FIELDS_AND_TOKENS = f"ERROR: [Skyflow] Invalid {{}} request. Keys for values and tokens are not matching."

        EMPTY_IDS = f"ERROR: [Skyflow] Invalid {{}} request. Ids can not be empty."
        EMPTY_OR_NULL_ID_IN_IDS = f"ERROR: [Skyflow] Invalid {{}} request. Id can not be null or empty in ids at index {{}}."
        TOKENIZATION_NOT_SUPPORTED_WITH_REDACTION= f"ERROR: [Skyflow] Invalid {{}} request. Tokenization is not supported when redaction is applied."
        TOKENIZATION_SUPPORTED_ONLY_WITH_IDS=f"ERROR: [Skyflow] Invalid {{}} request. Tokenization is not supported when column name and values are passed."
        TOKENS_NOT_ALLOWED_WITH_BYOT_DISABLE = f"ERROR: [Skyflow] Invalid {{}} request. Tokens are not allowed when token_strict is DISABLE."
        INSUFFICIENT_TOKENS_PASSED_FOR_BYOT_ENABLE_STRICT =f"ERROR: [Skyflow] Invalid {{}} request. For tokenStrict as ENABLE_STRICT, tokens should be passed for all fields."
        TOKENS_REQUIRED = f"ERROR: [Skyflow] Invalid {{}} request. Tokens are required."
        EMPTY_FIELDS = f"ERROR: [Skyflow] Invalid {{}} request. Fields can not be empty."
        EMPTY_OFFSET = f"ERROR: [Skyflow] Invalid {{}} request. Offset ca not be empty."
        NEITHER_IDS_NOR_COLUMN_NAME_PASSED  = f"ERROR: [Skyflow] Invalid {{}} request. Neither ids nor column name and values are passed."
        BOTH_IDS_AND_COLUMN_NAME_PASSED = f"ERROR: [Skyflow] Invalid {{}} request. Both ids and column name and values are passed."
        COLUMN_NAME_IS_REQUIRED = f"ERROR: [Skyflow] Invalid {{}} request. Column name is required when column values are passed."
        COLUMN_VALUES_IS_REQUIRED_GET = f"ERROR: [Skyflow] Invalid {{}} request. Column values are required when column name is passed."
        SKYFLOW_ID_IS_REQUIRED = f"ERROR: [Skyflow] Invalid {{}} request. Skyflow Id is required."
        EMPTY_SKYFLOW_ID = f"ERROR: [Skyflow] Invalid {{}} request. Skyflow Id can not be empty."

        COLUMN_VALUES_IS_REQUIRED_TOKENIZE = f"ERROR: [Skyflow] Invalid {{}} request. ColumnValues are required."
        EMPTY_COLUMN_GROUP_IN_COLUMN_VALUES = f"ERROR: [Skyflow] Invalid {{}} request. Column group can not be null or empty in column values at index %s2."

        EMPTY_QUERY= f"ERROR: [Skyflow] Invalid {{}} request. Query can not be empty."
        QUERY_IS_REQUIRED = f"ERROR: [Skyflow] Invalid {{}} request. Query is required."

        INSERT_RECORDS_REJECTED = f"ERROR: [Skyflow] Insert call resulted in failure."
        DETOKENIZE_REQUEST_REJECTED = "ERROR: [Skyflow] Detokenize request resulted in failure."
        DELETE_REQUEST_REJECTED = "ERROR: [Skyflow] Delete request resulted in failure."
        TOKENIZE_REQUEST_REJECTED = "ERROR: [Skyflow] Tokenize request resulted in failure."
        UPDATE_REQUEST_REJECTED = "ERROR: [Skyflow] Update request resulted in failure."
        QUERY_REQUEST_REJECTED = "ERROR: [Skyflow] Query request resulted in failure."
        GET_REQUEST_REJECTED = f"ERROR: [Skyflow] Get request resulted in failure."

    class Interface(Enum):
        INSERT = "INSERT"
        GET = "GET"
        QUERY = "QUERY"
        DETOKENIZE = " DETOKENIZE"
        TOKENIZE = "TOKENIZE"
        UPDATE = "UPDATE"
        DELETE = "DELETE"


    class Warning(Enum):
        WARNING_MESSAGE = "WARNING MESSAGE"



