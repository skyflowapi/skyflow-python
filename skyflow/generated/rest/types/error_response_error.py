# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ErrorResponseError(UniversalBaseModel):
    grpc_code: int = pydantic.Field()
    """
    gRPC status codes. See https://grpc.io/docs/guides/status-codes.
    """

    http_code: int = pydantic.Field()
    """
    HTTP status codes. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Status.
    """

    http_status: str = pydantic.Field()
    """
    HTTP status message.
    """

    message: str
    details: typing.Optional[typing.List[typing.Dict[str, typing.Optional[typing.Any]]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
