# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .v_1_locations import V1Locations


class V1ResponseEntities(UniversalBaseModel):
    """
    Detected entities.
    """

    processed_text: typing.Optional[str] = pydantic.Field(default=None)
    """
    Processed text of the entity.
    """

    original_text: typing.Optional[str] = pydantic.Field(default=None)
    """
    Original text of the entity.
    """

    location: typing.Optional[V1Locations] = None
    best_label: typing.Optional[str] = pydantic.Field(default=None)
    """
    Highest rated label.
    """

    labels: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Labels and their scores.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
