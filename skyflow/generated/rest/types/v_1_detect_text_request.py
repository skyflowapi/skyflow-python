# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .detect_data_accuracy import DetectDataAccuracy
from .detect_data_entities import DetectDataEntities
from .detect_request_deidentify_option import DetectRequestDeidentifyOption
from .v_1_advanced_options import V1AdvancedOptions


class V1DetectTextRequest(UniversalBaseModel):
    """
    Request to deidentify a string.
    """

    text: str = pydantic.Field()
    """
    Data to deidentify.
    """

    vault_id: str = pydantic.Field()
    """
    ID of the vault.
    """

    session_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Will give a handle to delete the tokens generated during a specific interaction.
    """

    restrict_entity_types: typing.Optional[typing.List[DetectDataEntities]] = pydantic.Field(default=None)
    """
    Entities to detect and deidentify.
    """

    deidentify_token_format: typing.Optional[DetectRequestDeidentifyOption] = None
    allow_regex: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Regular expressions to ignore when detecting entities.
    """

    restrict_regex: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Regular expressions to always restrict. Strings matching these regular expressions are replaced with 'RESTRICTED'.
    """

    return_entities: typing.Optional[bool] = pydantic.Field(default=None)
    """
    If `true`, returns the details for the detected entities.
    """

    accuracy: typing.Optional[DetectDataAccuracy] = None
    advanced_options: typing.Optional[V1AdvancedOptions] = None
    store_entities: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether entities should be stored in the vault.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
