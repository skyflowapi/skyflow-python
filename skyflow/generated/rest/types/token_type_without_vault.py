# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .entity_type import EntityType
from .token_type_without_vault_default import TokenTypeWithoutVaultDefault


class TokenTypeWithoutVault(UniversalBaseModel):
    """
    Mapping of tokens to generation for detected entities. Can't be specified together with `token_type`.
    """

    default: typing.Optional[TokenTypeWithoutVaultDefault] = None
    entity_unq_counter: typing.Optional[typing.List[EntityType]] = pydantic.Field(default=None)
    """
    Entity types to replace with entity tokens with unique counters.
    """

    entity_only: typing.Optional[typing.List[EntityType]] = pydantic.Field(default=None)
    """
    Entity types to replace with entity tokens.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
