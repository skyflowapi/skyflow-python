# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .advanced_options_entity_column_map import AdvancedOptionsEntityColumnMap


class AdvancedOptionsColumnMapping(UniversalBaseModel):
    """
    Contains map of what has to be stored in which column.
    """

    session_id: str = pydantic.Field()
    """
    Table name of the vault.
    """

    default: str = pydantic.Field()
    """
    Name of column to store data in when no explicit mapping exists.
    """

    entity_column_map: typing.Optional[typing.List[AdvancedOptionsEntityColumnMap]] = pydantic.Field(default=None)
    """
    Column mapping for different entities.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
