# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .entity_location import EntityLocation


class DetectedEntity(UniversalBaseModel):
    """
    Detected entities.
    """

    token: typing.Optional[str] = pydantic.Field(default=None)
    """
    Processed text of the entity.
    """

    value: typing.Optional[str] = pydantic.Field(default=None)
    """
    Original text of the entity.
    """

    location: typing.Optional[EntityLocation] = None
    entity_type: typing.Optional[str] = pydantic.Field(default=None)
    """
    Highest-rated label.
    """

    entity_scores: typing.Optional[typing.Dict[str, float]] = pydantic.Field(default=None)
    """
    entity_scores and their scores.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
