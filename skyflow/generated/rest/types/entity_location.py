# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class EntityLocation(UniversalBaseModel):
    """
    Locations of an entity in the text.
    """

    start_index: typing.Optional[int] = pydantic.Field(default=None)
    """
    Index of the first character of the string in the original text.
    """

    end_index: typing.Optional[int] = pydantic.Field(default=None)
    """
    Index of the last character of the string in the original text.
    """

    start_index_processed: typing.Optional[int] = pydantic.Field(default=None)
    """
    Index of the first character of the string in the processed text.
    """

    end_index_processed: typing.Optional[int] = pydantic.Field(default=None)
    """
    Index of the last character of the string in the processed text.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
