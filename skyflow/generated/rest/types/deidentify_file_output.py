# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .deidentify_file_output_processed_file_type import DeidentifyFileOutputProcessedFileType


class DeidentifyFileOutput(UniversalBaseModel):
    """
    Details and contents of the processed file.
    """

    processed_file: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="processedFile")] = (
        pydantic.Field(default=None)
    )
    """
    URL or base64-encoded data of the output.
    """

    processed_file_type: typing_extensions.Annotated[
        typing.Optional[DeidentifyFileOutputProcessedFileType], FieldMetadata(alias="processedFileType")
    ] = pydantic.Field(default=None)
    """
    Type of the processed file.
    """

    processed_file_extension: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="processedFileExtension")
    ] = pydantic.Field(default=None)
    """
    Extension of the processed file.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
