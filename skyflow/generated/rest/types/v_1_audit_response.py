# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .v_1_audit_response_event import V1AuditResponseEvent
import pydantic
import typing_extensions
from .v_1_audit_after_options import V1AuditAfterOptions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class V1AuditResponse(UniversalBaseModel):
    event: typing.Optional[typing.List[V1AuditResponseEvent]] = pydantic.Field(default=None)
    """
    Events matching the query.
    """

    next_ops: typing_extensions.Annotated[typing.Optional[V1AuditAfterOptions], FieldMetadata(alias="nextOps")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
