# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .advanced_options_vault_schema import AdvancedOptionsVaultSchema


class V1AdvancedOptions(UniversalBaseModel):
    """
    Advanced options for post processing.
    """

    date_shift: typing.Optional[int] = pydantic.Field(default=None)
    """
    No. of days by which original date has to be shifted to.
    """

    custom_client: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Custom client specific logic.
    """

    schema_: typing_extensions.Annotated[typing.Optional[AdvancedOptionsVaultSchema], FieldMetadata(alias="schema")] = (
        None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
