# coding: utf-8

"""
    Skyflow Data API

    # Data API  This API inserts, retrieves, and otherwise manages data in a vault.  The Data API is available from two base URIs. *identifier* is the identifier in your vault's URL.<ul><li><b>Sandbox:</b> https://*identifier*.vault.skyflowapis-preview.com</li><li><b>Production:</b> https://*identifier*.vault.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

    The version of the OpenAPI document: v1
    Contact: support@skyflow.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from skyflow.generated.rest.models.v1_audit_response import V1AuditResponse

from skyflow.generated.rest.api_client import ApiClient, RequestSerialized
from skyflow.generated.rest.api_response import ApiResponse
from skyflow.generated.rest.rest import RESTResponseType


class AuditApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def audit_service_list_audit_events(
        self,
        filter_ops_account_id: Annotated[StrictStr, Field(description="Resources with the specified account ID.")],
        filter_ops_context_change_id: Annotated[Optional[StrictStr], Field(description="ID for the audit event.")] = None,
        filter_ops_context_request_id: Annotated[Optional[StrictStr], Field(description="ID for the request that caused the event.")] = None,
        filter_ops_context_trace_id: Annotated[Optional[StrictStr], Field(description="ID for the request set by the service that received the request.")] = None,
        filter_ops_context_session_id: Annotated[Optional[StrictStr], Field(description="ID for the session in which the request was sent.")] = None,
        filter_ops_context_actor: Annotated[Optional[StrictStr], Field(description="Member who sent the request. Depending on `actorType`, this may be a user ID or a service account ID.")] = None,
        filter_ops_context_actor_type: Annotated[Optional[StrictStr], Field(description="Type of member who sent the request.")] = None,
        filter_ops_context_access_type: Annotated[Optional[StrictStr], Field(description="Type of access for the request.")] = None,
        filter_ops_context_ip_address: Annotated[Optional[StrictStr], Field(description="IP Address of the client that made the request.")] = None,
        filter_ops_context_origin: Annotated[Optional[StrictStr], Field(description="HTTP Origin request header (including scheme, hostname, and port) of the request.")] = None,
        filter_ops_context_auth_mode: Annotated[Optional[StrictStr], Field(description="Authentication mode the `actor` used.")] = None,
        filter_ops_context_jwt_id: Annotated[Optional[StrictStr], Field(description="ID of the JWT token.")] = None,
        filter_ops_context_bearer_token_context_id: Annotated[Optional[StrictStr], Field(description="Embedded User Context.")] = None,
        filter_ops_parent_account_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified parent account ID.")] = None,
        filter_ops_workspace_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified workspace ID.")] = None,
        filter_ops_vault_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified vault ID.")] = None,
        filter_ops_resource_ids: Annotated[Optional[StrictStr], Field(description="Resources with a specified ID. If a resource matches at least one ID, the associated event is returned. Format is a comma-separated list of \"\\<resourceType\\>/\\<resourceID\\>\". For example, \"VAULT/12345, USER/67890\".")] = None,
        filter_ops_action_type: Annotated[Optional[StrictStr], Field(description="Events with the specified action type.")] = None,
        filter_ops_resource_type: Annotated[Optional[StrictStr], Field(description="Resources with the specified type.")] = None,
        filter_ops_tags: Annotated[Optional[StrictStr], Field(description="Events with associated tags. If an event matches at least one tag, the event is returned. Comma-separated list. For example, \"login, get\".")] = None,
        filter_ops_response_code: Annotated[Optional[StrictInt], Field(description="HTTP response code of the request.")] = None,
        filter_ops_start_time: Annotated[Optional[StrictStr], Field(description="Start timestamp for the query, in SQL format.")] = None,
        filter_ops_end_time: Annotated[Optional[StrictStr], Field(description="End timestamp for the query, in SQL format.")] = None,
        filter_ops_api_name: Annotated[Optional[StrictStr], Field(description="Name of the API called in the request.")] = None,
        filter_ops_response_message: Annotated[Optional[StrictStr], Field(description="Response message of the request.")] = None,
        filter_ops_http_method: Annotated[Optional[StrictStr], Field(description="HTTP method of the request.")] = None,
        filter_ops_http_uri: Annotated[Optional[StrictStr], Field(description="HTTP URI of the request.")] = None,
        sort_ops_sort_by: Annotated[Optional[StrictStr], Field(description="Fully-qualified field by which to sort results. Field names should be in camel case (for example, \"capitalization.camelCase\").")] = None,
        sort_ops_order_by: Annotated[Optional[StrictStr], Field(description="Ascending or descending ordering of results.")] = None,
        after_ops_timestamp: Annotated[Optional[StrictStr], Field(description="Timestamp provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.")] = None,
        after_ops_change_id: Annotated[Optional[StrictStr], Field(description="Change ID provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Number of results to return.")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="Record position at which to start returning results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> V1AuditResponse:
        """List Audit Events

        Lists audit events that match query parameters.

        :param filter_ops_account_id: Resources with the specified account ID. (required)
        :type filter_ops_account_id: str
        :param filter_ops_context_change_id: ID for the audit event.
        :type filter_ops_context_change_id: str
        :param filter_ops_context_request_id: ID for the request that caused the event.
        :type filter_ops_context_request_id: str
        :param filter_ops_context_trace_id: ID for the request set by the service that received the request.
        :type filter_ops_context_trace_id: str
        :param filter_ops_context_session_id: ID for the session in which the request was sent.
        :type filter_ops_context_session_id: str
        :param filter_ops_context_actor: Member who sent the request. Depending on `actorType`, this may be a user ID or a service account ID.
        :type filter_ops_context_actor: str
        :param filter_ops_context_actor_type: Type of member who sent the request.
        :type filter_ops_context_actor_type: str
        :param filter_ops_context_access_type: Type of access for the request.
        :type filter_ops_context_access_type: str
        :param filter_ops_context_ip_address: IP Address of the client that made the request.
        :type filter_ops_context_ip_address: str
        :param filter_ops_context_origin: HTTP Origin request header (including scheme, hostname, and port) of the request.
        :type filter_ops_context_origin: str
        :param filter_ops_context_auth_mode: Authentication mode the `actor` used.
        :type filter_ops_context_auth_mode: str
        :param filter_ops_context_jwt_id: ID of the JWT token.
        :type filter_ops_context_jwt_id: str
        :param filter_ops_context_bearer_token_context_id: Embedded User Context.
        :type filter_ops_context_bearer_token_context_id: str
        :param filter_ops_parent_account_id: Resources with the specified parent account ID.
        :type filter_ops_parent_account_id: str
        :param filter_ops_workspace_id: Resources with the specified workspace ID.
        :type filter_ops_workspace_id: str
        :param filter_ops_vault_id: Resources with the specified vault ID.
        :type filter_ops_vault_id: str
        :param filter_ops_resource_ids: Resources with a specified ID. If a resource matches at least one ID, the associated event is returned. Format is a comma-separated list of \"\\<resourceType\\>/\\<resourceID\\>\". For example, \"VAULT/12345, USER/67890\".
        :type filter_ops_resource_ids: str
        :param filter_ops_action_type: Events with the specified action type.
        :type filter_ops_action_type: str
        :param filter_ops_resource_type: Resources with the specified type.
        :type filter_ops_resource_type: str
        :param filter_ops_tags: Events with associated tags. If an event matches at least one tag, the event is returned. Comma-separated list. For example, \"login, get\".
        :type filter_ops_tags: str
        :param filter_ops_response_code: HTTP response code of the request.
        :type filter_ops_response_code: int
        :param filter_ops_start_time: Start timestamp for the query, in SQL format.
        :type filter_ops_start_time: str
        :param filter_ops_end_time: End timestamp for the query, in SQL format.
        :type filter_ops_end_time: str
        :param filter_ops_api_name: Name of the API called in the request.
        :type filter_ops_api_name: str
        :param filter_ops_response_message: Response message of the request.
        :type filter_ops_response_message: str
        :param filter_ops_http_method: HTTP method of the request.
        :type filter_ops_http_method: str
        :param filter_ops_http_uri: HTTP URI of the request.
        :type filter_ops_http_uri: str
        :param sort_ops_sort_by: Fully-qualified field by which to sort results. Field names should be in camel case (for example, \"capitalization.camelCase\").
        :type sort_ops_sort_by: str
        :param sort_ops_order_by: Ascending or descending ordering of results.
        :type sort_ops_order_by: str
        :param after_ops_timestamp: Timestamp provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.
        :type after_ops_timestamp: str
        :param after_ops_change_id: Change ID provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.
        :type after_ops_change_id: str
        :param limit: Number of results to return.
        :type limit: int
        :param offset: Record position at which to start returning results.
        :type offset: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._audit_service_list_audit_events_serialize(
            filter_ops_account_id=filter_ops_account_id,
            filter_ops_context_change_id=filter_ops_context_change_id,
            filter_ops_context_request_id=filter_ops_context_request_id,
            filter_ops_context_trace_id=filter_ops_context_trace_id,
            filter_ops_context_session_id=filter_ops_context_session_id,
            filter_ops_context_actor=filter_ops_context_actor,
            filter_ops_context_actor_type=filter_ops_context_actor_type,
            filter_ops_context_access_type=filter_ops_context_access_type,
            filter_ops_context_ip_address=filter_ops_context_ip_address,
            filter_ops_context_origin=filter_ops_context_origin,
            filter_ops_context_auth_mode=filter_ops_context_auth_mode,
            filter_ops_context_jwt_id=filter_ops_context_jwt_id,
            filter_ops_context_bearer_token_context_id=filter_ops_context_bearer_token_context_id,
            filter_ops_parent_account_id=filter_ops_parent_account_id,
            filter_ops_workspace_id=filter_ops_workspace_id,
            filter_ops_vault_id=filter_ops_vault_id,
            filter_ops_resource_ids=filter_ops_resource_ids,
            filter_ops_action_type=filter_ops_action_type,
            filter_ops_resource_type=filter_ops_resource_type,
            filter_ops_tags=filter_ops_tags,
            filter_ops_response_code=filter_ops_response_code,
            filter_ops_start_time=filter_ops_start_time,
            filter_ops_end_time=filter_ops_end_time,
            filter_ops_api_name=filter_ops_api_name,
            filter_ops_response_message=filter_ops_response_message,
            filter_ops_http_method=filter_ops_http_method,
            filter_ops_http_uri=filter_ops_http_uri,
            sort_ops_sort_by=sort_ops_sort_by,
            sort_ops_order_by=sort_ops_order_by,
            after_ops_timestamp=after_ops_timestamp,
            after_ops_change_id=after_ops_change_id,
            limit=limit,
            offset=offset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1AuditResponse",
            '404': "object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def audit_service_list_audit_events_with_http_info(
        self,
        filter_ops_account_id: Annotated[StrictStr, Field(description="Resources with the specified account ID.")],
        filter_ops_context_change_id: Annotated[Optional[StrictStr], Field(description="ID for the audit event.")] = None,
        filter_ops_context_request_id: Annotated[Optional[StrictStr], Field(description="ID for the request that caused the event.")] = None,
        filter_ops_context_trace_id: Annotated[Optional[StrictStr], Field(description="ID for the request set by the service that received the request.")] = None,
        filter_ops_context_session_id: Annotated[Optional[StrictStr], Field(description="ID for the session in which the request was sent.")] = None,
        filter_ops_context_actor: Annotated[Optional[StrictStr], Field(description="Member who sent the request. Depending on `actorType`, this may be a user ID or a service account ID.")] = None,
        filter_ops_context_actor_type: Annotated[Optional[StrictStr], Field(description="Type of member who sent the request.")] = None,
        filter_ops_context_access_type: Annotated[Optional[StrictStr], Field(description="Type of access for the request.")] = None,
        filter_ops_context_ip_address: Annotated[Optional[StrictStr], Field(description="IP Address of the client that made the request.")] = None,
        filter_ops_context_origin: Annotated[Optional[StrictStr], Field(description="HTTP Origin request header (including scheme, hostname, and port) of the request.")] = None,
        filter_ops_context_auth_mode: Annotated[Optional[StrictStr], Field(description="Authentication mode the `actor` used.")] = None,
        filter_ops_context_jwt_id: Annotated[Optional[StrictStr], Field(description="ID of the JWT token.")] = None,
        filter_ops_context_bearer_token_context_id: Annotated[Optional[StrictStr], Field(description="Embedded User Context.")] = None,
        filter_ops_parent_account_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified parent account ID.")] = None,
        filter_ops_workspace_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified workspace ID.")] = None,
        filter_ops_vault_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified vault ID.")] = None,
        filter_ops_resource_ids: Annotated[Optional[StrictStr], Field(description="Resources with a specified ID. If a resource matches at least one ID, the associated event is returned. Format is a comma-separated list of \"\\<resourceType\\>/\\<resourceID\\>\". For example, \"VAULT/12345, USER/67890\".")] = None,
        filter_ops_action_type: Annotated[Optional[StrictStr], Field(description="Events with the specified action type.")] = None,
        filter_ops_resource_type: Annotated[Optional[StrictStr], Field(description="Resources with the specified type.")] = None,
        filter_ops_tags: Annotated[Optional[StrictStr], Field(description="Events with associated tags. If an event matches at least one tag, the event is returned. Comma-separated list. For example, \"login, get\".")] = None,
        filter_ops_response_code: Annotated[Optional[StrictInt], Field(description="HTTP response code of the request.")] = None,
        filter_ops_start_time: Annotated[Optional[StrictStr], Field(description="Start timestamp for the query, in SQL format.")] = None,
        filter_ops_end_time: Annotated[Optional[StrictStr], Field(description="End timestamp for the query, in SQL format.")] = None,
        filter_ops_api_name: Annotated[Optional[StrictStr], Field(description="Name of the API called in the request.")] = None,
        filter_ops_response_message: Annotated[Optional[StrictStr], Field(description="Response message of the request.")] = None,
        filter_ops_http_method: Annotated[Optional[StrictStr], Field(description="HTTP method of the request.")] = None,
        filter_ops_http_uri: Annotated[Optional[StrictStr], Field(description="HTTP URI of the request.")] = None,
        sort_ops_sort_by: Annotated[Optional[StrictStr], Field(description="Fully-qualified field by which to sort results. Field names should be in camel case (for example, \"capitalization.camelCase\").")] = None,
        sort_ops_order_by: Annotated[Optional[StrictStr], Field(description="Ascending or descending ordering of results.")] = None,
        after_ops_timestamp: Annotated[Optional[StrictStr], Field(description="Timestamp provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.")] = None,
        after_ops_change_id: Annotated[Optional[StrictStr], Field(description="Change ID provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Number of results to return.")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="Record position at which to start returning results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[V1AuditResponse]:
        """List Audit Events

        Lists audit events that match query parameters.

        :param filter_ops_account_id: Resources with the specified account ID. (required)
        :type filter_ops_account_id: str
        :param filter_ops_context_change_id: ID for the audit event.
        :type filter_ops_context_change_id: str
        :param filter_ops_context_request_id: ID for the request that caused the event.
        :type filter_ops_context_request_id: str
        :param filter_ops_context_trace_id: ID for the request set by the service that received the request.
        :type filter_ops_context_trace_id: str
        :param filter_ops_context_session_id: ID for the session in which the request was sent.
        :type filter_ops_context_session_id: str
        :param filter_ops_context_actor: Member who sent the request. Depending on `actorType`, this may be a user ID or a service account ID.
        :type filter_ops_context_actor: str
        :param filter_ops_context_actor_type: Type of member who sent the request.
        :type filter_ops_context_actor_type: str
        :param filter_ops_context_access_type: Type of access for the request.
        :type filter_ops_context_access_type: str
        :param filter_ops_context_ip_address: IP Address of the client that made the request.
        :type filter_ops_context_ip_address: str
        :param filter_ops_context_origin: HTTP Origin request header (including scheme, hostname, and port) of the request.
        :type filter_ops_context_origin: str
        :param filter_ops_context_auth_mode: Authentication mode the `actor` used.
        :type filter_ops_context_auth_mode: str
        :param filter_ops_context_jwt_id: ID of the JWT token.
        :type filter_ops_context_jwt_id: str
        :param filter_ops_context_bearer_token_context_id: Embedded User Context.
        :type filter_ops_context_bearer_token_context_id: str
        :param filter_ops_parent_account_id: Resources with the specified parent account ID.
        :type filter_ops_parent_account_id: str
        :param filter_ops_workspace_id: Resources with the specified workspace ID.
        :type filter_ops_workspace_id: str
        :param filter_ops_vault_id: Resources with the specified vault ID.
        :type filter_ops_vault_id: str
        :param filter_ops_resource_ids: Resources with a specified ID. If a resource matches at least one ID, the associated event is returned. Format is a comma-separated list of \"\\<resourceType\\>/\\<resourceID\\>\". For example, \"VAULT/12345, USER/67890\".
        :type filter_ops_resource_ids: str
        :param filter_ops_action_type: Events with the specified action type.
        :type filter_ops_action_type: str
        :param filter_ops_resource_type: Resources with the specified type.
        :type filter_ops_resource_type: str
        :param filter_ops_tags: Events with associated tags. If an event matches at least one tag, the event is returned. Comma-separated list. For example, \"login, get\".
        :type filter_ops_tags: str
        :param filter_ops_response_code: HTTP response code of the request.
        :type filter_ops_response_code: int
        :param filter_ops_start_time: Start timestamp for the query, in SQL format.
        :type filter_ops_start_time: str
        :param filter_ops_end_time: End timestamp for the query, in SQL format.
        :type filter_ops_end_time: str
        :param filter_ops_api_name: Name of the API called in the request.
        :type filter_ops_api_name: str
        :param filter_ops_response_message: Response message of the request.
        :type filter_ops_response_message: str
        :param filter_ops_http_method: HTTP method of the request.
        :type filter_ops_http_method: str
        :param filter_ops_http_uri: HTTP URI of the request.
        :type filter_ops_http_uri: str
        :param sort_ops_sort_by: Fully-qualified field by which to sort results. Field names should be in camel case (for example, \"capitalization.camelCase\").
        :type sort_ops_sort_by: str
        :param sort_ops_order_by: Ascending or descending ordering of results.
        :type sort_ops_order_by: str
        :param after_ops_timestamp: Timestamp provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.
        :type after_ops_timestamp: str
        :param after_ops_change_id: Change ID provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.
        :type after_ops_change_id: str
        :param limit: Number of results to return.
        :type limit: int
        :param offset: Record position at which to start returning results.
        :type offset: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._audit_service_list_audit_events_serialize(
            filter_ops_account_id=filter_ops_account_id,
            filter_ops_context_change_id=filter_ops_context_change_id,
            filter_ops_context_request_id=filter_ops_context_request_id,
            filter_ops_context_trace_id=filter_ops_context_trace_id,
            filter_ops_context_session_id=filter_ops_context_session_id,
            filter_ops_context_actor=filter_ops_context_actor,
            filter_ops_context_actor_type=filter_ops_context_actor_type,
            filter_ops_context_access_type=filter_ops_context_access_type,
            filter_ops_context_ip_address=filter_ops_context_ip_address,
            filter_ops_context_origin=filter_ops_context_origin,
            filter_ops_context_auth_mode=filter_ops_context_auth_mode,
            filter_ops_context_jwt_id=filter_ops_context_jwt_id,
            filter_ops_context_bearer_token_context_id=filter_ops_context_bearer_token_context_id,
            filter_ops_parent_account_id=filter_ops_parent_account_id,
            filter_ops_workspace_id=filter_ops_workspace_id,
            filter_ops_vault_id=filter_ops_vault_id,
            filter_ops_resource_ids=filter_ops_resource_ids,
            filter_ops_action_type=filter_ops_action_type,
            filter_ops_resource_type=filter_ops_resource_type,
            filter_ops_tags=filter_ops_tags,
            filter_ops_response_code=filter_ops_response_code,
            filter_ops_start_time=filter_ops_start_time,
            filter_ops_end_time=filter_ops_end_time,
            filter_ops_api_name=filter_ops_api_name,
            filter_ops_response_message=filter_ops_response_message,
            filter_ops_http_method=filter_ops_http_method,
            filter_ops_http_uri=filter_ops_http_uri,
            sort_ops_sort_by=sort_ops_sort_by,
            sort_ops_order_by=sort_ops_order_by,
            after_ops_timestamp=after_ops_timestamp,
            after_ops_change_id=after_ops_change_id,
            limit=limit,
            offset=offset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1AuditResponse",
            '404': "object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def audit_service_list_audit_events_without_preload_content(
        self,
        filter_ops_account_id: Annotated[StrictStr, Field(description="Resources with the specified account ID.")],
        filter_ops_context_change_id: Annotated[Optional[StrictStr], Field(description="ID for the audit event.")] = None,
        filter_ops_context_request_id: Annotated[Optional[StrictStr], Field(description="ID for the request that caused the event.")] = None,
        filter_ops_context_trace_id: Annotated[Optional[StrictStr], Field(description="ID for the request set by the service that received the request.")] = None,
        filter_ops_context_session_id: Annotated[Optional[StrictStr], Field(description="ID for the session in which the request was sent.")] = None,
        filter_ops_context_actor: Annotated[Optional[StrictStr], Field(description="Member who sent the request. Depending on `actorType`, this may be a user ID or a service account ID.")] = None,
        filter_ops_context_actor_type: Annotated[Optional[StrictStr], Field(description="Type of member who sent the request.")] = None,
        filter_ops_context_access_type: Annotated[Optional[StrictStr], Field(description="Type of access for the request.")] = None,
        filter_ops_context_ip_address: Annotated[Optional[StrictStr], Field(description="IP Address of the client that made the request.")] = None,
        filter_ops_context_origin: Annotated[Optional[StrictStr], Field(description="HTTP Origin request header (including scheme, hostname, and port) of the request.")] = None,
        filter_ops_context_auth_mode: Annotated[Optional[StrictStr], Field(description="Authentication mode the `actor` used.")] = None,
        filter_ops_context_jwt_id: Annotated[Optional[StrictStr], Field(description="ID of the JWT token.")] = None,
        filter_ops_context_bearer_token_context_id: Annotated[Optional[StrictStr], Field(description="Embedded User Context.")] = None,
        filter_ops_parent_account_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified parent account ID.")] = None,
        filter_ops_workspace_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified workspace ID.")] = None,
        filter_ops_vault_id: Annotated[Optional[StrictStr], Field(description="Resources with the specified vault ID.")] = None,
        filter_ops_resource_ids: Annotated[Optional[StrictStr], Field(description="Resources with a specified ID. If a resource matches at least one ID, the associated event is returned. Format is a comma-separated list of \"\\<resourceType\\>/\\<resourceID\\>\". For example, \"VAULT/12345, USER/67890\".")] = None,
        filter_ops_action_type: Annotated[Optional[StrictStr], Field(description="Events with the specified action type.")] = None,
        filter_ops_resource_type: Annotated[Optional[StrictStr], Field(description="Resources with the specified type.")] = None,
        filter_ops_tags: Annotated[Optional[StrictStr], Field(description="Events with associated tags. If an event matches at least one tag, the event is returned. Comma-separated list. For example, \"login, get\".")] = None,
        filter_ops_response_code: Annotated[Optional[StrictInt], Field(description="HTTP response code of the request.")] = None,
        filter_ops_start_time: Annotated[Optional[StrictStr], Field(description="Start timestamp for the query, in SQL format.")] = None,
        filter_ops_end_time: Annotated[Optional[StrictStr], Field(description="End timestamp for the query, in SQL format.")] = None,
        filter_ops_api_name: Annotated[Optional[StrictStr], Field(description="Name of the API called in the request.")] = None,
        filter_ops_response_message: Annotated[Optional[StrictStr], Field(description="Response message of the request.")] = None,
        filter_ops_http_method: Annotated[Optional[StrictStr], Field(description="HTTP method of the request.")] = None,
        filter_ops_http_uri: Annotated[Optional[StrictStr], Field(description="HTTP URI of the request.")] = None,
        sort_ops_sort_by: Annotated[Optional[StrictStr], Field(description="Fully-qualified field by which to sort results. Field names should be in camel case (for example, \"capitalization.camelCase\").")] = None,
        sort_ops_order_by: Annotated[Optional[StrictStr], Field(description="Ascending or descending ordering of results.")] = None,
        after_ops_timestamp: Annotated[Optional[StrictStr], Field(description="Timestamp provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.")] = None,
        after_ops_change_id: Annotated[Optional[StrictStr], Field(description="Change ID provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="Number of results to return.")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="Record position at which to start returning results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List Audit Events

        Lists audit events that match query parameters.

        :param filter_ops_account_id: Resources with the specified account ID. (required)
        :type filter_ops_account_id: str
        :param filter_ops_context_change_id: ID for the audit event.
        :type filter_ops_context_change_id: str
        :param filter_ops_context_request_id: ID for the request that caused the event.
        :type filter_ops_context_request_id: str
        :param filter_ops_context_trace_id: ID for the request set by the service that received the request.
        :type filter_ops_context_trace_id: str
        :param filter_ops_context_session_id: ID for the session in which the request was sent.
        :type filter_ops_context_session_id: str
        :param filter_ops_context_actor: Member who sent the request. Depending on `actorType`, this may be a user ID or a service account ID.
        :type filter_ops_context_actor: str
        :param filter_ops_context_actor_type: Type of member who sent the request.
        :type filter_ops_context_actor_type: str
        :param filter_ops_context_access_type: Type of access for the request.
        :type filter_ops_context_access_type: str
        :param filter_ops_context_ip_address: IP Address of the client that made the request.
        :type filter_ops_context_ip_address: str
        :param filter_ops_context_origin: HTTP Origin request header (including scheme, hostname, and port) of the request.
        :type filter_ops_context_origin: str
        :param filter_ops_context_auth_mode: Authentication mode the `actor` used.
        :type filter_ops_context_auth_mode: str
        :param filter_ops_context_jwt_id: ID of the JWT token.
        :type filter_ops_context_jwt_id: str
        :param filter_ops_context_bearer_token_context_id: Embedded User Context.
        :type filter_ops_context_bearer_token_context_id: str
        :param filter_ops_parent_account_id: Resources with the specified parent account ID.
        :type filter_ops_parent_account_id: str
        :param filter_ops_workspace_id: Resources with the specified workspace ID.
        :type filter_ops_workspace_id: str
        :param filter_ops_vault_id: Resources with the specified vault ID.
        :type filter_ops_vault_id: str
        :param filter_ops_resource_ids: Resources with a specified ID. If a resource matches at least one ID, the associated event is returned. Format is a comma-separated list of \"\\<resourceType\\>/\\<resourceID\\>\". For example, \"VAULT/12345, USER/67890\".
        :type filter_ops_resource_ids: str
        :param filter_ops_action_type: Events with the specified action type.
        :type filter_ops_action_type: str
        :param filter_ops_resource_type: Resources with the specified type.
        :type filter_ops_resource_type: str
        :param filter_ops_tags: Events with associated tags. If an event matches at least one tag, the event is returned. Comma-separated list. For example, \"login, get\".
        :type filter_ops_tags: str
        :param filter_ops_response_code: HTTP response code of the request.
        :type filter_ops_response_code: int
        :param filter_ops_start_time: Start timestamp for the query, in SQL format.
        :type filter_ops_start_time: str
        :param filter_ops_end_time: End timestamp for the query, in SQL format.
        :type filter_ops_end_time: str
        :param filter_ops_api_name: Name of the API called in the request.
        :type filter_ops_api_name: str
        :param filter_ops_response_message: Response message of the request.
        :type filter_ops_response_message: str
        :param filter_ops_http_method: HTTP method of the request.
        :type filter_ops_http_method: str
        :param filter_ops_http_uri: HTTP URI of the request.
        :type filter_ops_http_uri: str
        :param sort_ops_sort_by: Fully-qualified field by which to sort results. Field names should be in camel case (for example, \"capitalization.camelCase\").
        :type sort_ops_sort_by: str
        :param sort_ops_order_by: Ascending or descending ordering of results.
        :type sort_ops_order_by: str
        :param after_ops_timestamp: Timestamp provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.
        :type after_ops_timestamp: str
        :param after_ops_change_id: Change ID provided in the previous audit response's `nextOps` attribute. An alternate way to manage response pagination. Can't be used with `sortOps` or `offset`. For the first request in a series of audit requests, leave blank.
        :type after_ops_change_id: str
        :param limit: Number of results to return.
        :type limit: int
        :param offset: Record position at which to start returning results.
        :type offset: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._audit_service_list_audit_events_serialize(
            filter_ops_account_id=filter_ops_account_id,
            filter_ops_context_change_id=filter_ops_context_change_id,
            filter_ops_context_request_id=filter_ops_context_request_id,
            filter_ops_context_trace_id=filter_ops_context_trace_id,
            filter_ops_context_session_id=filter_ops_context_session_id,
            filter_ops_context_actor=filter_ops_context_actor,
            filter_ops_context_actor_type=filter_ops_context_actor_type,
            filter_ops_context_access_type=filter_ops_context_access_type,
            filter_ops_context_ip_address=filter_ops_context_ip_address,
            filter_ops_context_origin=filter_ops_context_origin,
            filter_ops_context_auth_mode=filter_ops_context_auth_mode,
            filter_ops_context_jwt_id=filter_ops_context_jwt_id,
            filter_ops_context_bearer_token_context_id=filter_ops_context_bearer_token_context_id,
            filter_ops_parent_account_id=filter_ops_parent_account_id,
            filter_ops_workspace_id=filter_ops_workspace_id,
            filter_ops_vault_id=filter_ops_vault_id,
            filter_ops_resource_ids=filter_ops_resource_ids,
            filter_ops_action_type=filter_ops_action_type,
            filter_ops_resource_type=filter_ops_resource_type,
            filter_ops_tags=filter_ops_tags,
            filter_ops_response_code=filter_ops_response_code,
            filter_ops_start_time=filter_ops_start_time,
            filter_ops_end_time=filter_ops_end_time,
            filter_ops_api_name=filter_ops_api_name,
            filter_ops_response_message=filter_ops_response_message,
            filter_ops_http_method=filter_ops_http_method,
            filter_ops_http_uri=filter_ops_http_uri,
            sort_ops_sort_by=sort_ops_sort_by,
            sort_ops_order_by=sort_ops_order_by,
            after_ops_timestamp=after_ops_timestamp,
            after_ops_change_id=after_ops_change_id,
            limit=limit,
            offset=offset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "V1AuditResponse",
            '404': "object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _audit_service_list_audit_events_serialize(
        self,
        filter_ops_account_id,
        filter_ops_context_change_id,
        filter_ops_context_request_id,
        filter_ops_context_trace_id,
        filter_ops_context_session_id,
        filter_ops_context_actor,
        filter_ops_context_actor_type,
        filter_ops_context_access_type,
        filter_ops_context_ip_address,
        filter_ops_context_origin,
        filter_ops_context_auth_mode,
        filter_ops_context_jwt_id,
        filter_ops_context_bearer_token_context_id,
        filter_ops_parent_account_id,
        filter_ops_workspace_id,
        filter_ops_vault_id,
        filter_ops_resource_ids,
        filter_ops_action_type,
        filter_ops_resource_type,
        filter_ops_tags,
        filter_ops_response_code,
        filter_ops_start_time,
        filter_ops_end_time,
        filter_ops_api_name,
        filter_ops_response_message,
        filter_ops_http_method,
        filter_ops_http_uri,
        sort_ops_sort_by,
        sort_ops_order_by,
        after_ops_timestamp,
        after_ops_change_id,
        limit,
        offset,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if filter_ops_context_change_id is not None:
            
            _query_params.append(('filterOps.context.changeID', filter_ops_context_change_id))
            
        if filter_ops_context_request_id is not None:
            
            _query_params.append(('filterOps.context.requestID', filter_ops_context_request_id))
            
        if filter_ops_context_trace_id is not None:
            
            _query_params.append(('filterOps.context.traceID', filter_ops_context_trace_id))
            
        if filter_ops_context_session_id is not None:
            
            _query_params.append(('filterOps.context.sessionID', filter_ops_context_session_id))
            
        if filter_ops_context_actor is not None:
            
            _query_params.append(('filterOps.context.actor', filter_ops_context_actor))
            
        if filter_ops_context_actor_type is not None:
            
            _query_params.append(('filterOps.context.actorType', filter_ops_context_actor_type))
            
        if filter_ops_context_access_type is not None:
            
            _query_params.append(('filterOps.context.accessType', filter_ops_context_access_type))
            
        if filter_ops_context_ip_address is not None:
            
            _query_params.append(('filterOps.context.ipAddress', filter_ops_context_ip_address))
            
        if filter_ops_context_origin is not None:
            
            _query_params.append(('filterOps.context.origin', filter_ops_context_origin))
            
        if filter_ops_context_auth_mode is not None:
            
            _query_params.append(('filterOps.context.authMode', filter_ops_context_auth_mode))
            
        if filter_ops_context_jwt_id is not None:
            
            _query_params.append(('filterOps.context.jwtID', filter_ops_context_jwt_id))
            
        if filter_ops_context_bearer_token_context_id is not None:
            
            _query_params.append(('filterOps.context.bearerTokenContextID', filter_ops_context_bearer_token_context_id))
            
        if filter_ops_parent_account_id is not None:
            
            _query_params.append(('filterOps.parentAccountID', filter_ops_parent_account_id))
            
        if filter_ops_account_id is not None:
            
            _query_params.append(('filterOps.accountID', filter_ops_account_id))
            
        if filter_ops_workspace_id is not None:
            
            _query_params.append(('filterOps.workspaceID', filter_ops_workspace_id))
            
        if filter_ops_vault_id is not None:
            
            _query_params.append(('filterOps.vaultID', filter_ops_vault_id))
            
        if filter_ops_resource_ids is not None:
            
            _query_params.append(('filterOps.resourceIDs', filter_ops_resource_ids))
            
        if filter_ops_action_type is not None:
            
            _query_params.append(('filterOps.actionType', filter_ops_action_type))
            
        if filter_ops_resource_type is not None:
            
            _query_params.append(('filterOps.resourceType', filter_ops_resource_type))
            
        if filter_ops_tags is not None:
            
            _query_params.append(('filterOps.tags', filter_ops_tags))
            
        if filter_ops_response_code is not None:
            
            _query_params.append(('filterOps.responseCode', filter_ops_response_code))
            
        if filter_ops_start_time is not None:
            
            _query_params.append(('filterOps.startTime', filter_ops_start_time))
            
        if filter_ops_end_time is not None:
            
            _query_params.append(('filterOps.endTime', filter_ops_end_time))
            
        if filter_ops_api_name is not None:
            
            _query_params.append(('filterOps.apiName', filter_ops_api_name))
            
        if filter_ops_response_message is not None:
            
            _query_params.append(('filterOps.responseMessage', filter_ops_response_message))
            
        if filter_ops_http_method is not None:
            
            _query_params.append(('filterOps.httpMethod', filter_ops_http_method))
            
        if filter_ops_http_uri is not None:
            
            _query_params.append(('filterOps.httpURI', filter_ops_http_uri))
            
        if sort_ops_sort_by is not None:
            
            _query_params.append(('sortOps.sortBy', sort_ops_sort_by))
            
        if sort_ops_order_by is not None:
            
            _query_params.append(('sortOps.orderBy', sort_ops_order_by))
            
        if after_ops_timestamp is not None:
            
            _query_params.append(('afterOps.timestamp', after_ops_timestamp))
            
        if after_ops_change_id is not None:
            
            _query_params.append(('afterOps.changeID', after_ops_change_id))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if offset is not None:
            
            _query_params.append(('offset', offset))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/audit/events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


