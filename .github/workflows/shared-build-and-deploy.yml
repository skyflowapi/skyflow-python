name: Shared Build and Deploy

on:
  workflow_call:
    inputs:
      ref:
        description: 'Git reference to use (e.g., main or branch name)'
        required: true
        type: string

      is-internal:
        description: 'Flag for internal release'
        required: true
        type: boolean

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        with:
          fetch-depth: 0
        uses: actions/checkout@v1
      - name: Get Branch
        run: |
          BRANCH_NAME=$(git branch -r --contains ${{ github.sha }} | grep -o 'origin/.*' | sed 's|origin/||' | head -n 1)
          echo "Branch Name: $BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

      - uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 1.0.0

      - name: Bump Version
        run: |
          chmod +x ./ci-scripts/bump_version.sh
          if ${{ inputs.is-internal }}; then
            ./ci-scripts/bump_version.sh "${{ steps.previoustag.outputs.tag }}" "$(git rev-parse --short "$GITHUB_SHA")"
          else
            ./ci-scripts/bump_version.sh "${{ steps.previoustag.outputs.tag }}"
          fi

      - name: Commit changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add setup.py
          git add skyflow/utils/_version.py

          if [ "${{ inputs.is-internal }}" = "true" ]; then
            VERSION="${{ steps.previoustag.outputs.tag }}.dev0+$(git rev-parse --short $GITHUB_SHA)"
            COMMIT_MESSAGE="[AUTOMATED] Private Release $VERSION"
            git commit -m "$COMMIT_MESSAGE"
            git push origin ${{ github.ref_name }} -f
          else
            COMMIT_MESSAGE="[AUTOMATED] Public Release - ${{ steps.previoustag.outputs.tag }}"
            git commit -m "$COMMIT_MESSAGE"
            git push origin $branch_name -f
          fi


        